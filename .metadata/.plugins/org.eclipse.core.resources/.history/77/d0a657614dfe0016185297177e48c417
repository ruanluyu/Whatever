package blocks;

import processing.core.PApplet;
import system.Map;
import system.Rectangle;
import system.RenderableFromCamera;

public class Block_Thorn extends Block implements TouchAreaFeedBack, NeedInitialize, Penetrable, RenderableFromCamera {

	public Block_Thorn(int idx,int idy) {
		super(Block.BlockId.THORN,idx,idy);
		area = new Rectangle(0, 0, Map.BLOCKSIZE / 2f, Map.BLOCKSIZE / 1.2f);
		area.setCenterPointByRatio(.5f, 1f);
		area.moveCenterTo(Map.BLOCKSIZE / 2f, Map.BLOCKSIZE);
		area.setCenterPointByFloat(Map.BLOCKSIZE / 2f, Map.BLOCKSIZE / 2f);
		area.translate(idx * Map.BLOCKSIZE, idy * Map.BLOCKSIZE);
		gm.parent.println(area.p1x() + " " + area.p1y() + " " + area.p2x() + " " + area.p2y());
	}

	public Block_Thorn(int r90,int idx,int idy) {
		this(idx,idy);
		rotate90 = r90;
		area.rotate(r90);
	}

	@Override
	public void touchArea(Rectangle rec) {
		if (!rec.intersected(area)) {
			System.out.println("false");
			return;
		}
		System.out.println("true");
		type = Block.BlockId.THORN_T;
		gm.man.kill();
	}

	@Override
	public void initialize() {
		type = Block.BlockId.THORN;
	}

	@Override
	public void penetrate() {

	}

	@Override
	public void renderFromCamera() {
		gm.parent.rect(area.p1x(), area.p1y(), area.getWidth(), area.getHeight());

	}

}
