package Blocks;

import processing.core.PImage;
import system.ImgIdMessage;
import system.Rectangle;
import system.ResManager;

public abstract class Block{
	public BlockId id = BlockId.ERROR;
	Rectangle rect = null;
	boolean dieBlock = false;
	boolean touched = false;
	public int rotate90 = 0;
	protected static PImage[] imgList = null;
	public enum BlockId{
		ERROR,AIR,BLOCK_NORMAL,BLOCK_SUSPENDED,THORN
	}
	public Block(BlockId bid){
		id = bid;
	}
	
	public static void loadResManager(ResManager r){
		ImgIdMessage imgMessage = new ImgIdMessage();
		imgMessage.materialId = ResManager.imgMaterialId.MATERIAL_00;
		int startId = imgMessage.getId();
		imgMessage.materialId = ResManager.imgMaterialId.MATERIAL_03_T;
		int endId = imgMessage.getId();
		imgList = new PImage[endId-startId+1];
		for(int i = startId;i<=endId;i++){
			imgList[i] = r.getImage(i);
		}
	}
	
	public static Block Builder(BlockId id){
		Block block = null;
		switch(id){
		case AIR:
			block = new Block_Air();
			break;
		case BLOCK_NORMAL:
			block = new Block_Normal();
			break;
		case BLOCK_SUSPENDED:
			block = new Block_Suspended();
			break;
		case THORN:
			block = new Block_Thorn();
			break;	
		default:
			block = new Block_Error();
		}
		return block;
	}
	public PImage renderTexture(){
		return imgList[id.ordinal()-1];
	}
}
